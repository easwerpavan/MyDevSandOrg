<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>Assign_Amount</name>
        <label>Assign Amount</label>
        <locationX>138</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>Ammount</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>For_Loop_OPP.Amount</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_Loop_OPP</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Null</name>
        <label>Check Null</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Update_zero</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Opp_Records</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>For_Loop_OPP</targetReference>
            </connector>
            <label>If Not Null</label>
        </rules>
    </decisions>
    <interviewLabel>Roll Up Delete {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Roll Up Delete</label>
    <loops>
        <name>For_Loop_OPP</name>
        <label>For Loop OPP</label>
        <locationX>50</locationX>
        <locationY>551</locationY>
        <collectionReference>Get_Opp_Records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Amount</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_amount</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Opp_Records</name>
        <label>Get Opp Records</label>
        <locationX>182</locationX>
        <locationY>311</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_amount</name>
        <label>Update amount</label>
        <locationX>50</locationX>
        <locationY>887</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AnnualRevenue</field>
            <value>
                <elementReference>Ammount</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_zero</name>
        <label>Update zero</label>
        <locationX>314</locationX>
        <locationY>551</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AnnualRevenue</field>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Opp_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Amount</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>Ammount</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
</Flow>
